modules:
  - .signing_party
---
include:
  - remote_sign_on_device.yml
---
objects:
  - redis: DARedis
  - signer: Individual
---
# Currently getting here with the url in the console of the initial interview
mandatory: True
code: |
  if 'action_key' in url_args:
    party = get_signer( url_args )
    if party:
      signer.name.first = party[ 'name' ]
      signer.has_signed = party[ 'has_signed' ]
      was_willing = party[ 'willing_to_sign' ]
      log( was_willing )
      
      ## TODO: should this ask willing to sign every time? Currently:
      ## If was willing to sign, skip the question, otherwise ask again.
      #if was_willing is True or signer.willing_to_sign:
      
      # Skip question if they've already signed
      # Should `.has_signed` be handled here or passed on to `.sign_on_device` which already has to be set up to handle it?
      if signer.has_signed or signer.willing_to_sign:
        amend_signer( url_args, 'willing_to_sign', True )
        signer.sign_on_device
      else:
        amend_signer( url_args, 'willing_to_sign', False )
        signer.after_unwilling_to_sign
        
  ## Untested
  #else:
  #  unauthorized
---
###################
#  Must be defined
##################
---
id: x.after_signature
event: x.after_signature
generic object: Individual
code: |
  if not x.has_signed:
    amend_signer( url_args, 'signature', x.signature )
    amend_signer( url_args, 'signature_date', today()  )
    amend_signer( url_args, 'has_signed', True )

  x.after_signature_saved
---
id: x.after_unwilling_to_sign
event: x.after_unwilling_to_sign
generic object: Individual
code: |
  amend_signer( url_args, 'willing_to_sign', False )
  bah = get_signer( url_args )
  log( 'bah' )
  log( bah[ 'willing_to_sign' ] )
  x.after_unwilling_to_sign_saved
---
###################
#  Customizable?/Should be customized
##################
---
id: x.after_signature_saved
event: x.after_signature_saved
generic object: Individual
code: |
  x.status
---
# Doc is `None` when we try to use signatures
id: signature status
event: x.status
generic object: Individual
prevent going back: True
question: |
  Signature status for ${ x }
subquestion: |
  ${ redis.get_data( url_args['action_key'] )['user_names'] }'s document.
  
  ${ redis.get_data( url_args['action_key'] )[ 'signed_doc' ] }
---
id: signature
generic object: Individual
question: |
  Signature ${ x }
signature: x.signature
---
id: unwilling to sign end
generic object: Individual
event: x.after_unwilling_to_sign_saved
question: |
  Thank you and goodbye
buttons:
  - Exit: exit
---
id: unauthorized
event: unauthorized
question: |
  Thank you and goodbye
buttons:
  - Exit: exit
---
id: x.willing_to_sign
generic object: Individual
question: |
  Are you willing to sign this document?
yesno: x.willing_to_sign
